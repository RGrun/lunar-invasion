
***
                //set up 1x1 static
                platforms.add(new Platform_1X1(4.5f, 3.5f, false, 1f, 0));
                platforms.add(new Platform_1X1(15.5f, 36.5f, false, 1f, 0));

                //set up 2x2 static
                for(float py = 10; py <= 16; py += 2) {
                    platforms.add(new Platform_2X2(3, py, false, 1f, 0));
                }

                for(float py = 26; py <= 32; py += 2) {
                    platforms.add(new Platform_2X2(3, py, false, 1f, 0));
                }

                for(float py = 10; py <= 16; py += 2) {
                    platforms.add(new Platform_2X2(17, py, false, 1f, 0));
                }

                for(float py = 26; py <= 32; py += 2) {
                    platforms.add(new Platform_2X2(17, py, false, 1f, 0));
                }


                for(float py = 18; py <= 24; py += 2) {
                    platforms.add(new Platform_2X2(3, py, false, 10f, 0));
                }

                for(float py = 18; py <= 24; py += 2) {
                    platforms.add(new Platform_2X2(17, py, false, 10f, 0));
                }

                //set up 2x2 breakable
                platforms.add(new Platform_2X2(9, 22, true, 10f,90));
                platforms.add(new Platform_2X2(11, 22, true, 10f, 90));
***


        //breakable 4x4 platforms
        platforms.add(new Platform_4X4(11.5f, 10, true, 10f));
        platforms.add(new Platform_4X4(11.5f, 30, true, 10f));


        //static 4x4 platforms
        platforms.add(new Platform_4X4(5, 10, false, 1));
        platforms.add(new Platform_4X4(18, 10, false, 1));

        platforms.add(new Platform_4X4(5, 20, false, 1));
        platforms.add(new Platform_4X4(11.5f, 20, false, 1));
        platforms.add(new Platform_4X4(18, 20, false, 1));

        platforms.add(new Platform_4X4(5, 30, false, 1));
        platforms.add(new Platform_4X4(18, 30, false, 1));

***

       //static 2x2 platforms
       platforms.add(new Platform_2X2(9.5f, 14, false, 1, 0));
       platforms.add(new Platform_2X2(9.5f, 26, false, 1, 0));

       //static 6x2 platforms
       platforms.add(new Platform_6X2(4.5f, 20, false, 1, 90));
       platforms.add(new Platform_6X2(15.5f, 20, false, 1, 90));

       //static 10x2 platforms
       platforms.add(new Platform_10X2(2.5f, 20, false, 1, 90));
       platforms.add(new Platform_10X2(17.5f, 20, false, 1, 90));


       //breakable 2x2 platforms
       platforms.add(new Platform_2X2(8f, 20, true, 10, 0));
       platforms.add(new Platform_2X2(10f, 20, true, 10, 0));
       platforms.add(new Platform_2X2(12f, 20, true, 10, 0));

***

        //angled platforms (corners)
        platforms.add(new Platform_Angled_4X4(3f, 2, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_4X4(17.25f, 2, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_4X4(3, 38, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_4X4(17.25f, 38, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SW));

        //angled platforms (center)
        platforms.add(new Platform_Angled_2X2(9, 19, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));
        platforms.add(new Platform_Angled_2X2(11, 21, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));

        //vertical platforms
        platforms.add(new Platform_16X2(4, 20, false, 1, 90));
        platforms.add(new Platform_16X2(16, 20, false, 1, 90));

***

        //center four 4x4 angled platforms (large center diamond)
        platforms.add(new Platform_Angled_4X4(8, 18, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SW));
        platforms.add(new Platform_Angled_4X4(12, 18, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_4X4(8, 22, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_4X4(12, 22, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NE));
        
        //four smaller diamonds
        //bot-left
        platforms.add(new Platform_Angled_2X2(4, 11, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_2X2(6, 11, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_2X2(6, 9, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_2X2(4, 9, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));

        //bot-right
        platforms.add(new Platform_Angled_2X2(14, 11, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_2X2(16, 11, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_2X2(16, 9, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_2X2(14, 9, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));

        //top-left
        platforms.add(new Platform_Angled_2X2(4, 31, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_2X2(6, 31, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_2X2(6, 29, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_2X2(4, 29, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));

        //top-right
        platforms.add(new Platform_Angled_2X2(14, 31, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_2X2(16, 31, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_2X2(16, 29, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_2X2(14, 29, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));

        //small ones to the left and right of the center diamond
        platforms.add(new Platform_Angled_2X2(2, 19, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_2X2(2, 21, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));

        platforms.add(new Platform_Angled_2X2(18, 19, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));
        platforms.add(new Platform_Angled_2X2(18, 21, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NW));


***


        //angled platforms (corners)
        platforms.add(new Platform_Angled_4X4(3f, 2, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NE));
        platforms.add(new Platform_Angled_4X4(17.25f, 2, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.NW));
        platforms.add(new Platform_Angled_4X4(3, 38, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SE));
        platforms.add(new Platform_Angled_4X4(17.25f, 38, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_4X4,
                Triangle.TRIANGLE_FACING.SW));

        //angled platforms (center)
        /*platforms.add(new Platform_Angled_2X2(9, 19, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.SW));
        platforms.add(new Platform_Angled_2X2(11, 21, 1,
                Platform.PLATFORM_TYPE.TYPE_ANGLED_2X2,
                Triangle.TRIANGLE_FACING.NE));*/

        //vertical platforms
        platforms.add(new Platform_16X2(4, 20, false, 1, 90));
        platforms.add(new Platform_16X2(16, 20, false, 1, 90));

        //power ups
        powerUps.add(new WeaponPU(10, 10));
        powerUps.add(new WeaponPU(10, 30));
        powerUps.add(new WeaponPU(10, 25));

        List<Vector2> drone1Points = new ArrayList<>();
        drone1Points.add(new Vector2(10, 20));
        drone1Points.add(new Vector2(10, 15));

        //drones
        drones.add(new Drone(10, 20, drone1Points, true));